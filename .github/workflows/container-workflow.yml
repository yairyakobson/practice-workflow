name: Container Deployment Workflow
on: push

env:
  CACHE_KEY: node-deps
  MONGODB_DB_NAME: test
jobs:
  test-job:
    environment: testing
    runs-on: ubuntu-latest
    container: node:latest # container name from the docker hub
    services:
      docker:
        image: docker:20.10.7-dind
        options: --privileged
    env:
      MONGODB_CONNECTION_PROTOCOL: mongodb+srv
      MONGODB_CLUSTER_ADDRESS: ${{ secrets.MONGODB_CLUSTER_ADDRESS }}
      MONGODB_USERNAME: ${{ secrets.MONGODB_USERNAME }}
      MONGODB_PASSWORD: ${{ secrets.MONGODB_PASSWORD }}
      PORT: 8080
    steps:
      - name: Get Code
        uses: actions/checkout@v4

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ env.CACHE_KEY }}-${{ hashFiles('**/package-lock.json') }}

      - name: Build Docker image
        run: |
          docker build \
            --build-arg MONGODB_CLUSTER_ADDRESS=${{ secrets.MONGODB_CLUSTER_ADDRESS }} \
            --build-arg MONGODB_USERNAME=${{ secrets.MONGODB_USERNAME }} \
            --build-arg MONGODB_PASSWORD=${{ secrets.MONGODB_PASSWORD }} \
            -t jobs-and-containers-project .

      - name: Install dependencies
        run: npm ci
        
      - name: Run server
        run: npm start & npx wait-on http://127.0.0.1:$PORT # requires MongoDB Atlas to accept requests from anywhere!

      - name: Run container
        run: docker run -d -p ${{ env.PORT }}:8080 jobs-and-containers-project

      - name: Run tests
        run: npm test

      - name: Output information
        run: |
          echo "MONGODB_USERNAME: $MONGODB_USERNAME"
  deploy-job:
    needs: test-job
    runs-on: ubuntu-latest
    steps:
      - name: Output information
        env:
          PORT: 3000
        run: |        
          echo "MONGODB_DB_NAME: $MONGODB_DB_NAME"
          echo "MONGODB_USERNAME: $MONGODB_USERNAME"
          echo "${{ env.PORT }}"